name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch (trigger event)
  push:
    branches: [main] # Trigger workflow on changes pushed to the `main` branch
  # Allows you to run this workflow manually from the Actions tab on GitHub. (manual trigger)
  workflow_dispatch: # Optional manual trigger for running the workflow on demand

permissions:
  contents: read # Grants read-only access to repository content
  pages: write # Allows publishing to GitHub Pages
  id-token: write # Required for GitHub Pages deployment authorization (GitHub Pages permissions)

jobs:
  build:
    runs-on: ubuntu-latest # Uses the latest Ubuntu environment for workflow execution (GitHub-hosted runners)

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4 # Use the latest version of checkout action

      # Step 2: Setup Deno environment
      - name: Setup Deno
        uses: denoland/setup-deno@v2 # Sets up the Deno runtime environment
        with:
          deno-version: v2.1.1 # Specify the Deno version to use

      # Step 3: Install npm and Astro CLI
      - name: Setup npm compatibility and install Astro
        run: |
          deno install --allow-scripts
          deno task astro --install astro # Install Astro locally
          deno task astro --exec astro --version # Verify Astro is installed

      # Step 4: Build the Astro website
      - name: Build the site
        run: deno task build # Executes the `build` task defined in package.json

      # Step 5: Upload build artifacts for deployment
      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist # Path to the build output directory (default Astro output)
          
  deploy:
    needs: build # Ensures the `build` job completes successfully before this job runs (Job dependencies)
    runs-on: ubuntu-latest # Uses the same environment as the `build` job
    environment:
      name: github-pages # Sets the environment to GitHub Pages for deployment (Environment context)
      url: ${{ steps.deployment.outputs.page_url }} # Outputs the deployment URL (Environment variables)

    steps:
      - name: Deploy to GitHub Pages
        id: deployment # Assigns an ID to reference this step
        uses: actions/deploy-pages@v4 # Deploys the uploaded artifact to GitHub Pages (Static site hosting)
        # (Concepts: Deployment pipelines, GitHub Actions for Pages)
