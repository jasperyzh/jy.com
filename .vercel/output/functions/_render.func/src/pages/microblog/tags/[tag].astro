---
/**
 * Microblog tag page
 * Displays microblog posts filtered by a specific tag
 */
import Layout from "@/layouts/BaseLayout.astro";
import MicroblogFeed from "@/components/microblog/MicroblogFeed.astro";
import { getCollection } from "astro:content";

// Generate static paths for all tags
export async function getStaticPaths() {
  const allPosts = await getCollection("microblog");
  
  // Filter out draft posts in production
  const publishedPosts = import.meta.env.PROD
    ? allPosts.filter((post) => !post.data.draft && !post.data.isPrivate)
    : allPosts;
  
  // Get all unique tags
  const uniqueTags = [
    ...new Set(
      publishedPosts.flatMap((post) => post.data.tags || [])
    ),
  ];
  
  // Generate paths for each tag
  return uniqueTags.map((tag) => {
    // Filter posts by tag
    const filteredPosts = publishedPosts.filter((post) => 
      post.data.tags?.includes(tag)
    );
    
    // Sort by publication date (newest first)
    const sortedPosts = filteredPosts.sort((a, b) => {
      const dateA = a.data.pubDate instanceof Date ? a.data.pubDate : new Date();
      const dateB = b.data.pubDate instanceof Date ? b.data.pubDate : new Date();
      return dateB.getTime() - dateA.getTime();
    });
    
    return {
      params: { tag },
      props: { 
        posts: sortedPosts,
        tag 
      },
    };
  });
}

const { posts, tag } = Astro.props;
---

<Layout 
  title={`Microblog - #${tag}`} 
  description={`Microblog posts tagged with #${tag}`}
>
  <main class="container py-4">
    <section>
      <h1 class="mb-2">Microblog</h1>
      <h2 class="tag-title mb-4">Posts tagged with <span class="tag-highlight">#{tag}</span></h2>
      
      <div class="mb-4">
        <a href="/microblog" class="btn btn-outline-primary">
          <i class="bi bi-arrow-left me-1"></i> All Posts
        </a>
      </div>
      
      <MicroblogFeed 
        posts={posts}
        showFilters={false}
        currentFilter={null}
      />
    </section>
  </main>
</Layout>

<style>
  h1 {
    font-size: 2.5rem;
  }
  
  .tag-title {
    font-size: 1.5rem;
    color: #666;
  }
  
  .tag-highlight {
    color: #0d6efd;
    font-weight: bold;
  }
  
  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }
    
    .tag-title {
      font-size: 1.2rem;
    }
  }
</style>

<script>
  // Import Bootstrap icons if not already loaded
  if (!document.querySelector('link[href*="bootstrap-icons"]')) {
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css';
    document.head.appendChild(link);
  }
</script>