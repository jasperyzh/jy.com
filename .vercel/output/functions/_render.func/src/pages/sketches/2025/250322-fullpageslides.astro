---
// inspired by Fullpage.js - https://alvarotrigo.com/fullPage/

import BaseLayout from "@/layouts/BaseLayout.astro";

// Fullpage Slides Component
const sketch_title = "Fullpage Slides";
---

<BaseLayout title={sketch_title}>
  <style is:inline>
    header {
      z-index: 9999;
      position: relative;
    }
  </style>
  <style>
    /* Reset styles */
    html,
    body {
      /* margin: 0;
      padding: 0;
      height: 100%;
      font-family: Arial, sans-serif;
      overflow: hidden; */
      /* Prevent default scrolling */
    }

    /* Main container */
    .fullpage-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    /* Section styling */
    .section {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      font-size: 2rem;
      overflow: hidden;
      transition: transform 0.8s ease;
      will-change: transform;
    }

    /* Colors for different sections */
    .section:nth-child(1) {
      background-color: #f9c5d1;
      background-image: linear-gradient(315deg, #f9c5d1 0%, #9795ef 74%);
    }

    .section:nth-child(2) {
      background-color: #f8ef42;
      background-image: linear-gradient(315deg, #f8ef42 0%, #0fd64f 74%);
    }

    .section:nth-child(3) {
      background-color: #63a4ff;
      background-image: linear-gradient(315deg, #63a4ff 0%, #83eaf1 74%);
    }
    .section:nth-child(3) {
      background-color: #63a4ff;
      background-image: linear-gradient(315deg, #63a4ff 0%, #83eaf1 74%);
    }

    .section:nth-child(4) {
      background-color: #ff9a8b;
      background-image: linear-gradient(315deg, #ff9a8b 0%, #ff6a88 74%);
    }

    .section:nth-child(5) {
      background-color: #a18cd1;
      background-image: linear-gradient(315deg, #a18cd1 0%, #fbc2eb 74%);
    }

    /* Navigation dots */
    .navigation {
      position: fixed;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      z-index: 100;
    }

    .nav-dot {
      width: 10px;
      height: 10px;
      background-color: rgba(255, 255, 255, 0.5);
      border-radius: 50%;
      margin: 10px 0;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .nav-dot.active {
      background-color: white;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
      transform: scale(1.5);
    }

    /* Animation for content */
    .content {
      opacity: 0;
      transform: translateY(20px);
      transition: all 0.8s ease;
    }

    .section.active .content {
      opacity: 1;
      transform: translateY(0);
    }
  </style>

  <div class="fullpage-container" id="fullpage">
    <section class="section" id="section1">
      <div class="content">
        <h1>Section 1</h1>
        <p>Scroll down to continue</p>
      </div>
    </section>

    <section class="section" id="section2">
      <div class="content">
        <h1>Section 2</h1>
        <p>Keep scrolling</p>
      </div>
    </section>

    <section class="section" id="section3">
      <div class="content">
        <h1>Section 3</h1>
        <p>You've reached 3rd</p>
      </div>
    </section>
    <section class="section" id="section4">
      <div class="content">
        <h1>Section 4</h1>
        <p>You've reached 4th</p>
      </div>
    </section>
    <section class="section" id="section5">
      <div class="content">
        <h1>Section 5</h1>
        <p>You've reached the end</p>
      </div>
    </section>
  </div>

  <!-- Navigation dots -->
  <div class="navigation">
    <div class="nav-dot" data-section="section1"></div>
    <div class="nav-dot" data-section="section2"></div>
    <div class="nav-dot" data-section="section3"></div>
    <div class="nav-dot" data-section="section4"></div>
    <div class="nav-dot" data-section="section5"></div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Get elements
      const sections = Array.from(document.querySelectorAll(".section"));
      const navDots = Array.from(document.querySelectorAll(".nav-dot"));

      let isScrolling = false;
      let currentSection = 0;
      let touchStartY = 0;
      let touchEndY = 0;

      // Initialize sections
      function init() {
        // Position each section
        sections.forEach((section, index) => {
          // TypeScript-safe way to set styles
          const htmlSection = section as HTMLElement;
          htmlSection.style.transform = `translateY(${index * 100}%)`;
        });

        // Set first section as active
        updateActiveClasses();
      }

      // Function to go to a specific slide
      function goToSlide(index) {
        if (isScrolling) return;
        isScrolling = true;
        currentSection = index;

        // Update all sections positions
        sections.forEach((section, i) => {
          const htmlSection = section as HTMLElement;
          htmlSection.style.transform = `translateY(${(i - index) * 100}%)`;
        });

        // Update active states
        updateActiveClasses();

        // Reset scroll lock after animation
        setTimeout(() => {
          isScrolling = false;
        }, 800);
      }

      // Update active classes
      function updateActiveClasses() {
        // Update section active state
        sections.forEach((section, index) => {
          if (index === currentSection) {
            section.classList.add("active");
          } else {
            section.classList.remove("active");
          }
        });

        // Update navigation dots
        navDots.forEach((dot, index) => {
          if (index === currentSection) {
            dot.classList.add("active");
          } else {
            dot.classList.remove("active");
          }
        });
      }

      // Wheel event handler
      function handleWheel(e) {
        e.preventDefault();
        if (isScrolling) return;

        const delta = e.deltaY || -e.wheelDelta;

        if (delta > 0 && currentSection < sections.length - 1) {
          // Scroll down - go to next section
          goToSlide(currentSection + 1);
        } else if (delta < 0 && currentSection > 0) {
          // Scroll up - go to previous section
          goToSlide(currentSection - 1);
        }
      }

      // Touch event handlers for mobile
      function handleTouchStart(e) {
        touchStartY = e.touches[0].clientY;
      }

      function handleTouchMove(e) {
        touchEndY = e.touches[0].clientY;
      }

      function handleTouchEnd() {
        if (isScrolling) return;

        const diff = touchStartY - touchEndY;
        const threshold = 50; // Minimum swipe distance

        if (diff > threshold && currentSection < sections.length - 1) {
          // Swipe up - go to next section
          goToSlide(currentSection + 1);
        } else if (diff < -threshold && currentSection > 0) {
          // Swipe down - go to previous section
          goToSlide(currentSection - 1);
        }
      }

      // Event listeners
      document.addEventListener("wheel", handleWheel, { passive: false });
      document.addEventListener("touchstart", handleTouchStart, {
        passive: true,
      });
      document.addEventListener("touchmove", handleTouchMove, {
        passive: true,
      });
      document.addEventListener("touchend", handleTouchEnd, { passive: true });

      // Keyboard navigation
      document.addEventListener("keydown", (e) => {
        if (isScrolling) return;

        if (
          (e.key === "ArrowDown" || e.key === "PageDown") &&
          currentSection < sections.length - 1
        ) {
          e.preventDefault();
          goToSlide(currentSection + 1);
        } else if (
          (e.key === "ArrowUp" || e.key === "PageUp") &&
          currentSection > 0
        ) {
          e.preventDefault();
          goToSlide(currentSection - 1);
        }
      });

      // Navigation dot click events
      navDots.forEach((dot, index) => {
        dot.addEventListener("click", () => goToSlide(index));
      });

      // Initialize
      init();
    });
  </script>
</BaseLayout>
