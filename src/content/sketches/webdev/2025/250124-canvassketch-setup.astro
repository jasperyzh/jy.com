---
const sketch_title = "canvas-sketch setup";
const slug = Astro.url.pathname.split("/").pop().replace(".astro", ""); // Extract slug
const display_title = sketch_title ? sketch_title : slug;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Canvas Sketch Setup</title>
    </head>

    <body>
        <main>
            <div id="sketch-container">
                <!-- This is where the canvas will be inserted -->
            </div>
        </main>
        <aside>
            {display_title}
        </aside>

        <style>
            html,
            body,
            main {
                margin: 0;
                padding: 0;
                min-height: 100vh;
                display: grid;
                align-items: center;
                place-items: center;
            }
            #sketch-container {
                display: inline-flex;
                filter: drop-shadow(0.5rem 0.5rem 1rem rgba(13, 13, 13, 0.3));
            }
            aside {
                position: absolute;
                bottom: 1rem;
                right: 1rem;
                font-family: monospace;
                font-size: 0.8rem;
                background: #000;
                color: #fff;
                padding: 0.2rem 0.4rem;
                box-shadow: 0.5rem 0.5rem 1rem rgba(13, 13, 13, 0.3);
            }
        </style>

        <script>
            import canvasSketch from "canvas-sketch";

            const settings = {
                dimensions: [512, 512],
            };

            export const runSketch = (container) => {
                const sketch = () => {
                    return ({ context, width, height }) => {
                        context.fillStyle = "white";
                        context.fillRect(0, 0, width, height);

                        context.fillStyle = "black";
                        context.beginPath();
                        context.arc(
                            width / 2,
                            height / 2,
                            width * 0.4,
                            0,
                            Math.PI * 2,
                            false,
                        );
                        context.fill();
                    };
                };

                // Create a new canvas and insert it into the specified container
                settings.canvas = document.createElement("canvas");
                settings.canvas.width = container.clientWidth;
                settings.canvas.height = container.clientHeight;

                container.appendChild(settings.canvas);

                canvasSketch(sketch, settings);
            };

            // Ensure the script runs after the DOM has loaded
            document.addEventListener("DOMContentLoaded", () => {
                const container = document.getElementById("sketch-container");
                if (container) {
                    runSketch(container); // Pass the container to the sketch
                }
            });
        </script>
    </body>
</html>
