---
import BaseLayout from "./BaseLayout.astro";
import { SITE_TITLE } from "@/consts";

interface Props {
  frontmatter: {
    title: string;
    description: string;
    date: string;
    category?: string;
    tags?: string[];
    thumbnail?: string;
  };
  collection?: string;
}

const { frontmatter, collection = 'blog' } = Astro.props;

// Extract the slug from the URL
const slug = Astro.url.pathname.split('/').pop();

// Generate the OG image URL based on the slug
// This will use our generated images from the build script
const ogImage = frontmatter.thumbnail || `/thumbnails/${collection}/${slug}.svg`;
---

<BaseLayout
  title={frontmatter.title}
  description={frontmatter.description}
  image={ogImage}
>
  <div class="max-w-4xl mx-auto px-4 py-8">
    <header class="mb-8">
      <div class="text-sm text-gray-500 dark:text-gray-400 mb-2">
        {frontmatter.category && (
          <span class="uppercase tracking-wide mr-2">{frontmatter.category}</span>
        )}
        <time>{new Date(frontmatter.date).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        })}</time>
      </div>
      
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        {frontmatter.title}
      </h1>
      
      <p class="text-xl text-gray-700 dark:text-gray-300">
        {frontmatter.description}
      </p>
      
      {frontmatter.tags && (
        <div class="flex flex-wrap gap-2 mt-4">
          {frontmatter.tags.map((tag: string) => (
            <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 rounded-full text-sm">
              {tag}
            </span>
          ))}
        </div>
      )}
    </header>
    
    <div class="prose dark:prose-invert max-w-none">
      <slot />
    </div>
  </div>
</BaseLayout> 