---
import BaseLayout from "./BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";

// Import Starwind components
import { Button } from "@/components/starwind/button";

const { frontmatter, headings, currentPage } = Astro.props;

// Type for docs collection data
interface DocsData {
  title: string;
  description: string;
  pubDate: Date;
  draft: boolean;
  order?: number;
  section?: string;
}

// Get all documentation pages
const allDocs = await getCollection("docs");

// Group docs by section
const docsBySections = allDocs.reduce((acc, doc) => {
  const section = doc.data.section || "Uncategorized";
  if (!acc[section]) {
    acc[section] = [];
  }
  acc[section].push(doc);
  return acc;
}, {} as Record<string, typeof allDocs>);

// Sort sections alphabetically
const sortedSections = Object.keys(docsBySections).sort((a, b) => {
  // Put "Introduction" first
  if (a === "Introduction") return -1;
  if (b === "Introduction") return 1;
  // Otherwise sort alphabetically
  return a.localeCompare(b);
});

// Sort docs within each section by order
for (const section in docsBySections) {
  docsBySections[section].sort((a, b) => {
    const orderA = a.data.order || 999;
    const orderB = b.data.order || 999;
    return orderA - orderB;
  });
}

// Get the slug for comparison with current page
const getPageSlug = (doc) => {
  const parts = doc.id.split("/");
  return parts[parts.length - 1].replace(/\.md$/, "");
};

const title = frontmatter?.title || "Documentation";
const description = frontmatter?.description || "Learn how to use our platform effectively.";
---

<BaseLayout title={title} description={description}>
  <div class="flex flex-col md:flex-row max-w-7xl mx-auto px-4 py-8 gap-8">
    <!-- Sidebar -->
    <aside class="md:w-64 flex-shrink-0 pb-4 md:pb-0">
      <div class="sticky top-24 overflow-y-auto pr-4 pb-12 max-h-[calc(100vh-6rem)]">
        <div class="mb-8">
          <h2 class="text-2xl font-bold text-slate-800 dark:text-white mb-2">Documentation</h2>
          <p class="text-slate-600 dark:text-slate-300 text-sm">Everything you need to know</p>
        </div>

        <nav>
          {sortedSections.map((section) => (
            <div class="mb-6">
              <h3 class="font-semibold text-sm uppercase tracking-wide text-slate-500 dark:text-slate-400 mb-3">
                {section}
              </h3>
              <ul class="space-y-2">
                {docsBySections[section].map((doc) => {
                  const isActive = getPageSlug(doc) === currentPage;
                  return (
                    <li>
                      <a
                        href={`/docs/${getPageSlug(doc)}`}
                        class={`block px-3 py-2 text-sm rounded-md transition-colors ${
                          isActive
                            ? "bg-blue-50 text-blue-700 font-medium dark:bg-blue-900/30 dark:text-blue-300"
                            : "text-slate-700 hover:bg-slate-100 dark:text-slate-300 dark:hover:bg-slate-800"
                        }`}
                      >
                        {doc.data.title}
                      </a>
                    </li>
                  );
                })}
              </ul>
            </div>
          ))}
        </nav>

        <div class="mt-8 pt-8 border-t border-slate-200 dark:border-slate-700">
          <a
            href="/"
            class="inline-flex items-center text-sm text-slate-500 dark:text-slate-400 hover:text-slate-700 dark:hover:text-slate-300"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-4 w-4 mr-2"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
              ></path>
            </svg>
            Back to Home
          </a>
        </div>
      </div>
    </aside>

    <!-- Main Content -->
    <main class="flex-1 min-w-0">
      <article class="prose prose-slate dark:prose-invert max-w-none">
        <slot />
      </article>

      <!-- Navigation Buttons -->
      <div class="mt-16 pt-8 border-t border-slate-200 dark:border-slate-800 flex justify-between">
        <Button variant="outline" class="gap-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-4 w-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"
            ></path>
          </svg>
          Previous
        </Button>

        <Button variant="outline" class="gap-2">
          Next
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-4 w-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M9 5l7 7-7 7"
            ></path>
          </svg>
        </Button>
      </div>
    </main>

    <!-- Table of Contents (Optional) -->
    <aside class="hidden xl:block xl:w-64 flex-shrink-0">
      <div class="sticky top-24 overflow-y-auto pl-4 pb-12 max-h-[calc(100vh-6rem)]">
        <h3 class="font-semibold text-sm uppercase tracking-wide text-slate-500 dark:text-slate-400 mb-3">
          On This Page
        </h3>
        {headings && headings.length > 0 && (
          <ul class="space-y-2 text-sm">
            {headings.map((heading) => {
              if (heading.depth > 3) return null;
              return (
                <li class={heading.depth === 3 ? "ml-4" : ""}>
                  <a
                    href={`#${heading.slug}`}
                    class="block py-1 text-slate-700 hover:text-blue-600 dark:text-slate-300 dark:hover:text-blue-400"
                  >
                    {heading.text}
                  </a>
                </li>
              );
            })}
          </ul>
        )}
      </div>
    </aside>
  </div>
</BaseLayout> 