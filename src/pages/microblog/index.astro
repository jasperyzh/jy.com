---
/**
 * Microblog main page
 * Displays a feed of microblog posts with pagination
 */
import Layout from "@/layouts/BaseLayout.astro";
import MicroblogFeed from "@/components/microblog/MicroblogFeed.astro";
import { getCollection } from "astro:content";
import { formatYymmddDate } from "@/utils/formatDate";

// Pagination configuration
export const POSTS_PER_PAGE = 10;

// Get all microblog posts
const allMicroblogPosts = await getCollection("microblog");

// Sort posts by date (newest first)
const sortedPosts = allMicroblogPosts.sort((a, b) => {
  const dateA = a.data.pubDate instanceof Date ? a.data.pubDate : new Date();
  const dateB = b.data.pubDate instanceof Date ? b.data.pubDate : new Date();
  return dateB.getTime() - dateA.getTime();
});

// Filter out draft posts and private posts in production
const publishedPosts = import.meta.env.PROD
  ? sortedPosts.filter((post) => !post.data.draft && !post.data.isPrivate)
  : sortedPosts;

// Calculate pagination
const totalPages = Math.ceil(publishedPosts.length / POSTS_PER_PAGE);
const currentPage = 1;
const start = 0;
const end = start + POSTS_PER_PAGE;
const paginatedPosts = publishedPosts.slice(start, end);

// Calculate previous and next page URLs
const prevUrl = currentPage > 1 ? `/microblog/page/${currentPage - 1}` : null;
const nextUrl =
  currentPage < totalPages ? `/microblog/page/${currentPage + 1}` : null;
---

<Layout title="Microblog" description="Short-form updates and thoughts">
  <main class="container mx-auto py-4">
    <section>
      <h1 class="mb-4">Microblog</h1>
      <p class="lead mb-4">
        Quick thoughts, photos, and updates. Short-form content that doesn't warrant a full blog post.
      </p>
      
      <MicroblogFeed 
        posts={paginatedPosts}
        {currentPage}
        {totalPages}
        {prevUrl}
        {nextUrl}
      />
    </section>
  </main>
</Layout>

<style>
  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }
  }
</style>

<script>
  // Import Bootstrap icons if not already loaded
  if (!document.querySelector('link[href*="bootstrap-icons"]')) {
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css';
    document.head.appendChild(link);
  }
</script>