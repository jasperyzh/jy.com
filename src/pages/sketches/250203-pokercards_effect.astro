---
const sketch_title = "";
const slug = Astro.url.pathname.split("/").pop().replace(".astro", ""); // Extract slug
const display_title = sketch_title ? sketch_title : slug;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>Canvas Sketch Setup</title>
	</head>

	<body>
		<main>
			<pre><a href="https://codepen.io/twogrey/pen/qEWpoeX" target="_blank">https://codepen.io/twogrey/pen/qEWpoeX</a></pre>
			<div class="container">
				<div class="card">
					<span>
						<!-- Crédits image : https://www.steamgriddb.com/icon/51824-->&lt;<img
							src="https://alexis-degryse.com/codepen/balatro/joker.png"
							alt=""
						/>&gt;</span
					>
					<!-- Crédits Image : https://www.deviantart.com/panfrieddupa/art/CodePen-Pixel-Logo-for-Personal-Portfolio-923686108-->
					<img
						src="https://alexis-degryse.com/codepen/balatro/codepen.png"
						alt=""
					/><span
						>&lt;/<img
							src="https://alexis-degryse.com/codepen/balatro/joker.png"
							alt=""
						/>&gt;</span
					>
					<s></s>
				</div>
				<div class="grid">
					<i></i><i></i><i></i><i></i><i></i><i></i><i></i><i></i><i
					></i><i></i><i></i><i></i><i></i><i></i><i></i><i></i>
				</div>
			</div>

			<div class="app"></div>

			<aside>
				{display_title}
			</aside>
		</main>
	</body>
</html>
<style lang="scss">
	*,
	::before,
	::after {
		box-sizing: border-box;
	}

	body {
		display: grid;
		place-content: center;
		height: 100vh;
		background-color: #356d55;

		&::before {
			content: "";
			position: absolute;
			inset: 0;
			filter: blur(10px);
			background-image: radial-gradient(
					circle at 16% 65%,
					hsla(0, 0%, 98%, 0.1) 0,
					hsla(0, 0%, 58%, 0.1) 50%,
					rgba(63, 63, 63, 0.1) 0,
					rgba(63, 63, 63, 0.1) 100%
				),
				radial-gradient(
					circle at 98% 57%,
					rgba(66, 66, 66, 0.3) 0,
					rgba(66, 66, 66, 0.3) 50%,
					hsla(0, 0%, 41.2%, 0.1) 0,
					hsla(0, 0%, 41.2%, 0.1) 100%
				);
		}

		&::after {
			content: "";
			position: absolute;
			inset: 0;
			background-image: linear-gradient(
				0deg,
				rgb(0, 0, 0, 0.2) 50%,
				transparent 0%
			);
			background-size: 0.1875rem 0.1875rem;
			pointer-events: none;
		}
	}

	.container {
		position: relative;
		perspective: 35rem;
		transition: scale 0.1s;

		&:has(.grid :hover) {
			scale: 1.05;
		}
	}

	.card {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: space-evenly;
		width: 50vmin;
		border: 1vmin solid #fff;
		aspect-ratio: 200/280;
		border-radius: 3vmin;
		box-shadow:
			0 0 0 0.2vmin black,
			-2vmin 4vmin 1vmin 0 rgba(0, 0, 0, 0.2);
		background-image: linear-gradient(
				135deg,
				rgb(0, 0, 0) 25%,
				transparent 25%
			),
			linear-gradient(225deg, rgb(0, 0, 0) 25%, transparent 25%),
			linear-gradient(45deg, rgb(0, 0, 0) 25%, transparent 25%),
			linear-gradient(315deg, rgb(0, 0, 0) 25%, transparent 25%);
		background-position:
			10px 0px,
			10px 0px,
			0px 0px,
			0px 0px;
		background-size: 20px 20px;
		background-repeat: repeat;
		background-color: #1b1b1b;
		transition: transform 0.2s;

		&::before,
		&::after {
			position: absolute;
			font-family: Sancreek;
			letter-spacing: -0.4em;
			font-size: 4.5vmin;
			writing-mode: vertical-lr;
			text-orientation: upright;
			color: #fff;
		}

		&::before {
			content: "CODEPEN";
			top: 3%;
			left: 1%;
		}

		&::after {
			content: "JOKER";
			bottom: 3%;
			right: 1%;
			scale: -1;
		}

		> img {
			width: 70%;
			image-rendering: pixelated;
			filter: invert(1);
		}

		span {
			color: #fff;
			font-size: 8vmin;
			font-family: Courier New;

			img {
				width: 0.75em;
				filter: brightness(0) invert(1);
			}
		}

		transform: rotate3d(var(--x), var(--y), 0, var(--r));

		&:has(
				+ .grid
					i:is(
						:nth-child(1),
						:nth-child(2),
						:nth-child(5),
						:nth-child(6)
					):hover
			) {
			--x: -1;
			--y: 1;
			--angle: 125deg;
		}

		&:has(
				+ .grid
					i:is(
						:nth-child(3),
						:nth-child(4),
						:nth-child(7),
						:nth-child(8)
					):hover
			) {
			--x: -1;
			--y: -1;
			--angle: 130deg;
		}

		&:has(
				+ .grid
					i:is(
						:nth-child(9),
						:nth-child(10),
						:nth-child(13),
						:nth-child(14)
					):hover
			) {
			--x: 1;
			--y: 1;
			--angle: 135deg;
		}

		&:has(
				+ .grid
					i:is(
						:nth-child(11),
						:nth-child(12),
						:nth-child(15),
						:nth-child(16)
					):hover
			) {
			--x: 1;
			--y: -1;
			--angle: 140deg;
		}

		&:has(
				+ .grid
					i:is(
						:nth-child(1),
						:nth-child(4),
						:nth-child(13),
						:nth-child(16)
					):hover
			) {
			--r: 8deg;
		}

		&:has(
				+ .grid
					i:is(
						:nth-child(2),
						:nth-child(3),
						:nth-child(5),
						:nth-child(8),
						:nth-child(9),
						:nth-child(12),
						:nth-child(14),
						:nth-child(15)
					):hover
			) {
			--r: 4deg;
		}

		&:has(
				+ .grid
					i:is(
						:nth-child(6),
						:nth-child(7),
						:nth-child(10),
						:nth-child(11)
					):hover
			) {
			--r: 2deg;
		}

		&:has(+ .grid :hover) {
			--s-o: 0.5;
			--s-s: 100%;
		}

		s {
			position: absolute;
			inset: 0;
			opacity: var(--s-o, 0);
			pointer-events: none;
			transition:
				--angle 0.2s,
				opacity 0.6s,
				background-size 0.3s;
			background-size: var(--s-s, 400%);
			background-image: linear-gradient(
					var(--angle),
					rgba(white, 0.25),
					rgba(white, 0.25) 15%,
					rgba(white, 0.9) 20%,
					rgba(white, 0.9) 25%,
					rgba(white, 0.25) 30%,
					rgba(white, 0.75) 100%
				),
				linear-gradient(
					calc(var(--angle) - 180deg),
					rgba(white, 0.1),
					rgba(white, 0.1) 15%,
					rgba(white, 0.8) 20%,
					rgba(white, 0.8) 25%,
					rgba(white, 0.1) 30%,
					rgba(white, 0.3) 100%
				),
				linear-gradient(
					var(--angle),
					rgba(white, 0.25),
					rgba(white, 0.15) 30%,
					rgba(white, 0.75) 33%,
					rgba(white, 0.75) 33%,
					rgba(white, 0.15) 35%,
					rgba(white, 0.25) 100%
				);
		}
	}

	.grid {
		position: absolute;
		inset: 0;
		display: grid;
		grid-template-columns: 1fr 1fr 1fr 1fr;
		grid-template-rows: 1fr 1fr 1fr 1fr;
	}

	@property --angle {
		syntax: "<angle>";
		inherits: true;
		initial-value: 135deg;
	}
</style>
