---
import { getCollection } from "astro:content";
import PageBlog from "@/layouts/PageBlog.astro";
import { formatYymmddDate } from "@/utils/formatDate";
import { formatForUrl, getBlogFilename } from "@/utils/blogUtils";

// Generate static paths for all tags
export async function getStaticPaths() {
  // Get blog posts
  const blogPosts = await getCollection("ob_blog");
  
  // Get all unique tags
  const tags = [...new Set(blogPosts.flatMap(post => post.data.tags || []))].sort();

  return tags.map(tag => ({
    params: { tag: formatForUrl(tag) },
    props: { 
      tag, 
      posts: blogPosts.filter(post => post.data.tags?.includes(tag)),
      allPosts: blogPosts,
    }
  }));
}

// Get the tag, posts, and allPosts from props
const { tag, posts, allPosts } = Astro.props;
const title = `Blog posts tagged with "${tag}"`;

const publishedPosts = allPosts.filter((post) => {
    return !post.data.draft;
  });

// Extract all tags for the sidebar
const allTags = publishedPosts.flatMap(post => post.data.tags || []);
const tags = [...new Set(allTags)].sort();

// Calculate count for each tag
const tagCounts = {};
tags.forEach(t => {
  tagCounts[t] = publishedPosts.filter(post => 
    post.data.tags && post.data.tags.includes(t)
  ).length;
});

export const prerender = true;
---

<PageBlog
  title={title}
  description={`Blog posts tagged with "${tag}"`}
  pageSubtitle={`Tag: ${tag}`}
  paginatedPosts={posts}
  tags={tags}
  tagCounts={tagCounts}
  baseUrl="/blog"
  allPostsCount={allPosts.length}
  activeTag={tag}
/>
