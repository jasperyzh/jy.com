---
import { getCollection } from "astro:content";
import Layout from "@/layouts/BaseLayout.astro";
import { slugifyTag, unslugifyTag, getAllUniqueTags } from "@/utils/tags";
import ReturnButton from '@/components/ReturnButton.astro';

// Generate static paths for all tags
export async function getStaticPaths() {
  // Get posts from both collections
  const blogPosts = await getCollection("ob_blog");
  
  // Combine all posts
  const allPosts = [...blogPosts];
  
  // Get all unique tags
  const tags = getAllUniqueTags(allPosts);


  return tags.map(tag => ({
    params: { tag: slugifyTag(tag) },
    props: { 
      tag, 
      posts: blogPosts.filter(post => post.data.tags?.includes(tag)),
    }
  }));
}

// Get the tag, posts, and microPosts from props
const { tag, posts } = Astro.props;
const title = `Content tagged with "${tag}"`;
const hasBlogPosts = posts.length > 0;

export const prerender = true;
---

<Layout title={title}>
  <main class="container py-4">
    <div class="d-flex gap-2 mb-4">
      <ReturnButton href="/blog" label="Return to Blog" />
    </div>
    
    <h1 class="mb-4">Content tagged with "{tag}"</h1>
    
    {/* Blog Posts Section */}
    {hasBlogPosts && (
      <section class="mb-5">
        <h2 class="h3 mb-3">Blog Posts</h2>
        <div class="row row-cols-1 row-cols-md-2 g-4">
          {posts.map((post) => (
            <div class="col">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">
                    <a href={`/blog/${post.id}`} class="text-decoration-none">
                      {post.data.title}
                    </a>
                  </h5>
                  <p class="card-text">{post.data.description}</p>
                  <div class="d-flex gap-2">
                    {post.data.tags?.map((postTag) => (
                      <a 
                        href={`/blog/tag/${slugifyTag(postTag)}`} 
                        class="badge text-bg-secondary text-decoration-none"
                      >
                        {postTag}
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}
    
    
    {/* No Content Message */}
    {!hasBlogPosts && (
      <div class="alert alert-info">
        <p>No content found with tag "{tag}".</p>
      </div>
    )}
  </main>
</Layout>
