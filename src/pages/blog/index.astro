---
/**
 * Blog index page with pagination support
 * Displays all blog posts organized by date (newest first)
 * Also shows a tag cloud for filtering posts by topic
 */
import Layout from "@/layouts/BaseLayout.astro";
import EntriesList from "@/components/EntriesList.astro";
import { getCollection } from "astro:content";
import TagCloud from "@/components/TagCloud.astro";
import Pagination from "@/components/Pagination.astro";
import { formatYymmddDate } from "@/utils/formatDate";
import { Debug } from "astro:components";

// Pagination configuration
export const POSTS_PER_PAGE = 6;

// Get all blog posts
const allPosts = await getCollection("ob_blog");

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = formatYymmddDate(a.data.pubDate || a.data.date || new Date());
  const dateB = formatYymmddDate(b.data.pubDate || b.data.date || new Date());
  return dateB.getTime() - dateA.getTime();
});

// Filter out draft posts in production
const publishedPosts = import.meta.env.PROD
  ? sortedPosts.filter((post) => !post.data.draft)
  : sortedPosts;

// Calculate pagination
const totalPages = Math.ceil(publishedPosts.length / POSTS_PER_PAGE);
const currentPage = 1;
const start = 0;
const end = start + POSTS_PER_PAGE;
const paginatedPosts = publishedPosts.slice(start, end);

// Calculate previous and next page URLs
const prevUrl = currentPage > 1 ? `/blog/page/${currentPage - 1}` : null;
const nextUrl =
  currentPage < totalPages ? `/blog/page/${currentPage + 1}` : null;
---

<Layout title="Blog - All Posts">
  <main>
    <section class="container py-4">
      <h1 class="mb-4">All Blog Posts</h1>

      <div class="row mb-4">
        <div class="col-md-12">
          <TagCloud />
        </div>
      </div>

      <div class="row mb-4">
        {/* Show count of posts */}
        <div class="col-md-12">
          <p class="text-muted">
            Showing {paginatedPosts.length} of {publishedPosts.length} posts
            {totalPages > 1 && `(Page ${currentPage} of ${totalPages})`}
          </p>
        </div>
      </div>

      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mb-4">
        {
          paginatedPosts.map((post) => (
            <div class="col">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">{post.data.title}</h5>
                  <p class="text-muted small">
                    {formatYymmddDate(
                      post.data.pubDate || post.data.date || new Date()
                    ).toLocaleString("default", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                    {/* {formatYymmddDate(post.data.pubDate || post.data.date || new Date()).toLocaleDateString()} */}
                  </p>
                  <p class="card-text">
                    {post.data.description || "No description available"}
                  </p>
                  <div class="card-tags mb-2">
                    {post.data.tags &&
                      post.data.tags.map((tag) => (
                        <a
                          href={`/tags/${tag}`}
                          class="tag badge bg-primary me-2 text-decoration-none"
                          key={tag}
                        >
                          {tag}
                        </a>
                      ))}
                  </div>
                  <a
                    class="stretched-link"
                    href={`/blog/${post.id}`}
                    aria-label={`Read ${post.data.title}`}
                  />
                </div>
              </div>
            </div>
          ))
        }
      </div>

      {/* Pagination controls */}
      {
        (prevUrl || nextUrl) && (
          <div class="row">
            <div class="col-md-12">
              <Pagination {prevUrl} {nextUrl} />
            </div>
          </div>
        )
      }
    </section>
  </main>
</Layout>

<style>
  .card-tags {
    position: relative;
    z-index: 2;
  }

  .card-tags a {
    pointer-events: auto;
  }
</style>
