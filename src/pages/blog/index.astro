---
/**
 * Blog index page with pagination support
 * Displays all blog posts organized by date (newest first)
 * Also shows a tag cloud for filtering posts by topic
 */
import { getCollection } from "astro:content";
import PageBlog from "@/layouts/PageBlog.astro";
import { formatYymmddDate } from "@/utils/formatDate";
import { getBlogFilename } from "@/utils/blogUtils";

// Pagination configuration
export const POSTS_PER_PAGE = 12;

// Get all blog posts
const allPosts = await getCollection("ob_blog");

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = formatYymmddDate(a.data.pubDate || new Date());
  const dateB = formatYymmddDate(b.data.pubDate || new Date());
  return dateB.getTime() - dateA.getTime();
});

// Filter out draft posts in production
/* const publishedPosts = import.meta.env.PROD
  ? sortedPosts.filter((post) => !post.data.draft)
  : sortedPosts;
 */

const publishedPosts = sortedPosts.filter((post) => !post.data.draft);

// Calculate pagination
const totalPages = Math.ceil(publishedPosts.length / POSTS_PER_PAGE);
const currentPage = 1;
const start = 0;
const end = start + POSTS_PER_PAGE;
const paginatedPosts = publishedPosts.slice(start, end);

// Calculate previous and next page URLs
const prevUrl = null;
const nextUrl =
  currentPage < totalPages ? `/blog/page/${currentPage + 1}` : null;

// Extract all tags for filtering
const allTags = publishedPosts.flatMap((post) => post.data.tags || []);
const tags = [...new Set(allTags)].sort();

// Calculate count for each tag
const tagCounts = {};
tags.forEach((tag) => {
  tagCounts[tag] = publishedPosts.filter(
    (post) => post.data.tags && post.data.tags.includes(tag)
  ).length;
});
---

<PageBlog
  title="Blog"
  description="Insights, tutorials, and thoughts on web development, creative coding, and more."
  currentPage={currentPage}
  totalPages={totalPages}
  prevUrl={prevUrl}
  nextUrl={nextUrl}
  paginatedPosts={paginatedPosts}
  tags={tags}
  tagCounts={tagCounts}
  baseUrl="/blog"
  allPostsCount={publishedPosts.length}
/>
