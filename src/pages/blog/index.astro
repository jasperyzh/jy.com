---
/**
 * Blog index page with pagination support
 * Displays all blog posts organized by date (newest first)
 * Also shows a tag cloud for filtering posts by topic
 */
import Layout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

import TagCloud from "@/components/TagCloud.astro";
import Pagination from "@/components/Pagination.astro";
import { formatYymmddDate } from "@/utils/formatDate";

import CardBlogPost from "@/components/CardBlogPost.astro";
import { getBlogFilename } from "@/utils/blogUtils";

// Pagination configuration
export const POSTS_PER_PAGE = 12;

// Get all blog posts
const allPosts = await getCollection("ob_blog");

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = formatYymmddDate(a.data.pubDate || new Date());
  const dateB = formatYymmddDate(b.data.pubDate || new Date());
  return dateB.getTime() - dateA.getTime();
});

// Filter out draft posts in production
const publishedPosts = import.meta.env.PROD
  ? sortedPosts.filter((post) => !post.data.draft)
  : sortedPosts;

// Calculate pagination
const totalPages = Math.ceil(publishedPosts.length / POSTS_PER_PAGE);
const currentPage = 1;
const start = 0;
const end = start + POSTS_PER_PAGE;
const paginatedPosts = publishedPosts.slice(start, end);

// Calculate previous and next page URLs
const prevUrl = currentPage > 1 ? `/blog/page/${currentPage - 1}` : null;
const nextUrl =
  currentPage < totalPages ? `/blog/page/${currentPage + 1}` : null;
---

<Layout title="Blog">
  <div class="container container--grid mx-auto px-4 max-w-7xl">
    <!-- Header Section -->
    <header class="header--page">
      <h1>Blog</h1>
      <p>
        Insights, tutorials, and thoughts on web development, creative coding,
        and more.
      </p>
    </header>

    <!-- Filters Section -->
    <!-- <TagCloud /> -->
    <!-- <div id="total_pages">
          Showing {paginatedPosts.length} of {publishedPosts.length} posts
          {totalPages > 1 && `(Page ${currentPage} of ${totalPages})`}
        </div> -->

    <!-- Blog Posts Grid -->
    <section class="posts-grid">
      {
        paginatedPosts.map((post) => (
          <CardBlogPost
            title={post.data.title}
            description={post.data.description || "No description available"}
            date={formatYymmddDate(post.data.pubDate || new Date())}
            tags={post.data.tags || []}
            category={post.data.category}
            url={`/blog/${getBlogFilename(post)}`}
            thumbnail={post.data.thumbnail || "/img/placeholder.png"}
          />
        ))
      }
    </section>
    <!-- Empty State -->
    {paginatedPosts.length === 0 && <p>Missing blog posts</p>}

    <!-- Pagination controls -->
    {
      (prevUrl || nextUrl) && (
        <div class="mt-8">
          <Pagination
            {prevUrl}
            {nextUrl}
            currentPage={currentPage}
            totalPages={totalPages}
            baseUrl="/blog"
          />
        </div>
      )
    }
  </div>
</Layout>
<style>
  @media (min-width: 1024px) {
    .container--grid {
      & > section.posts-grid {
        grid-column: 2 / span 4;
      }
      .posts-grid > * {
        grid-column: 1 / -1;
      }
    }
  }
</style>
