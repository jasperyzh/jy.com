---
/**
 * Paginated blog page
 * Handles routes like /blog/page/2, /blog/page/3, etc.
 */
import Layout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import TagCloud from "@/components/TagCloud.astro";
import Pagination from "@/components/Pagination.astro";
import { formatYymmddDate } from "@/utils/formatDate";

// Import the posts per page constant from blog index
import { POSTS_PER_PAGE } from "../index.astro";

// Define props and generate static paths
export async function getStaticPaths() {
  const allPosts = await getCollection("ob_blog");

  // Sort posts by date (newest first)
  const sortedPosts = allPosts.sort((a, b) => {
    const dateA = formatYymmddDate(a.data.pubDate || a.data.date || new Date());
    const dateB = formatYymmddDate(b.data.pubDate || b.data.date || new Date());
    return dateB.getTime() - dateA.getTime();
  });

  // Filter out draft posts in production
  const publishedPosts = import.meta.env.PROD
    ? sortedPosts.filter((post) => !post.data.draft)
    : sortedPosts;

  // Calculate total number of pages
  const totalPages = Math.ceil(publishedPosts.length / POSTS_PER_PAGE);

  // Generate an array of page numbers [1, 2, 3, ...]
  return Array.from({ length: totalPages }).map((_, i) => {
    const page = i + 1;
    const start = i * POSTS_PER_PAGE;
    const end = start + POSTS_PER_PAGE;

    return {
      params: { page: page.toString() },
      props: {
        posts: publishedPosts.slice(start, end),
        totalPosts: publishedPosts.length,
        currentPage: page,
        totalPages,
      },
    };
  });
}

// Define page props
const { posts, totalPosts, currentPage, totalPages } = Astro.props;

// Calculate pagination URLs
const prevUrl =
  currentPage > 1
    ? `/blog/page/${currentPage - 1}`
    : currentPage > 2
      ? "/blog"
      : null;
const nextUrl =
  currentPage < totalPages ? `/blog/page/${currentPage + 1}` : null;

export const prerender = true;
---

<Layout title={`Blog - Page ${currentPage}`}>
  <main>
    <section class="container py-4">
      <h1 class="mb-4">All Blog Posts</h1>

      <div class="row mb-4">
        <div class="col-md-12">
          <TagCloud />
        </div>
      </div>

      <div class="row mb-4">
        <div class="col-md-12">
          <p class="text-muted">
            Showing {posts.length} of {totalPosts} posts

            {totalPages > 1 && `(Page ${currentPage} of ${totalPages})`}
          </p>
        </div>
      </div>

      <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mb-4">
        {
          posts.map((post) => (
            <div class="col">
              <div class="card h-100">
                <div class="card-body">
                  <h5 class="card-title">{post.data.title}</h5>
                  <p class="text-muted small">
                    {formatYymmddDate(
                      post.data.pubDate || post.data.date || new Date()
                    ).toLocaleDateString()}
                  </p>
                  <p class="card-text">
                    {post.data.description || "No description available"}
                  </p>
                  <div class="card-tags mb-2">
                    {post.data.tags &&
                      post.data.tags.map((tag) => (
                        <a
                          href={`/blog/tags/${tag}`}
                          class="tag badge bg-primary me-2 text-decoration-none"
                          key={tag}
                        >
                          {tag}
                        </a>
                      ))}
                  </div>
                  <a
                    class="stretched-link"
                    href={`/blog/${post.slug}`}
                    aria-label={`Read ${post.data.title}`}
                  />
                </div>
              </div>
            </div>
          ))
        }
      </div>

      <!-- {/* Pagination controls */} -->
      <div class="row">
        <div class="col-md-12">
          <Pagination {prevUrl} {nextUrl} />
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  .card-tags {
    position: relative;
    z-index: 2;
  }

  .card-tags a {
    pointer-events: auto;
  }
</style>
