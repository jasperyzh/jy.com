---
/**
 * Circle Feature Component
 * 
 * A circular element highlighting a service or feature, inspired by Circora's design.
 * 
 * @component
 */

 export interface CircleFeatureProps {
  /** The title of the feature */
  title: string;
  /** Optional link for the feature */
  href?: string;
  /** Whether this feature is currently active */
  isActive?: boolean;
  /** Custom CSS class */
  class?: string;
}

const {
  title,
  href,
  isActive = false,
  class: className = '',
} = Astro.props;

// Determine active state classes
const stateClasses = isActive
  ? 'bg-black text-white hover:bg-black/90'
  : 'bg-black/90 text-white hover:bg-black';

---
<div class={`${className} mb-8`}>
  {href ? (
    <a href={href} class={`${stateClasses} block aspect-square rounded-full w-48 h-48 md:w-64 md:h-64 flex flex-col items-center justify-center text-center p-6 transition-all duration-300 hover:scale-105`}>
      <span class="uppercase tracking-wider text-sm font-medium">{title}</span>
      {isActive && <span class="mt-2 text-xs opacity-70">Current focus</span>}
      <slot />
    </a>
  ) : (
    <div class={`${stateClasses} aspect-square rounded-full w-48 h-48 md:w-64 md:h-64 flex flex-col items-center justify-center text-center p-6`}>
      <span class="uppercase tracking-wider text-sm font-medium">{title}</span>
      {isActive && <span class="mt-2 text-xs opacity-70">Current focus</span>}
      <slot />
    </div>
  )}
</div> 