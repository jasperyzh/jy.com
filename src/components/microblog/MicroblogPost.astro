---
/**
 * MicroblogPost component
 * Displays a single microblog post with text, images, and/or videos
 */
import { type CollectionEntry, render } from "astro:content";
import FormattedDate from "../FormattedDate.astro";
import ShareButton from "./ShareButton.astro";

interface Props {
  post: CollectionEntry<"microblog">;
}

const { post } = Astro.props;
// const { Content } = await post.render();
const { Content } = await render(post);

// Function to generate a readable ID from the post slug
const getPostId = (slug: string) => {
  return slug.split("/").pop() || slug;
};

// Get post ID for linking and sharing
const postId = getPostId(post.id);

// Function to extract YouTube video ID from URL
const getYoutubeVideoId = (url: string) => {
  const regExp =
    /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
  const match = url.match(regExp);
  return match && match[7].length === 11 ? match[7] : null;
};

// Function to check if a URL is a YouTube URL
const isYoutubeUrl = (url: string) => {
  return url.includes("youtube.com") || url.includes("youtu.be");
};
---

<article class="tweet" id={`post-${postId}`}>
  <div class="tweet-container">
    <!-- Avatar and header row -->
    <div class="tweet-header">
      <div class="tweet-avatar">
        <i class="bi bi-person-circle"></i>
      </div>
      <div class="tweet-header-content">
        <div class="tweet-name-container">
          <span class="tweet-name">JY</span>
          <span class="tweet-handle">@jy</span>
          <span class="tweet-dot">Â·</span>
          <time class="tweet-time" datetime={post.data.pubDate.toISOString()}>
            <FormattedDate date={post.data.pubDate} />
          </time>
        </div>
        
        {post.data.title && <div class="tweet-title">{post.data.title}</div>}
      </div>
    </div>

    <!-- Post content -->
    <div class="tweet-content">
      <Content />
    </div>

    <!-- Media content (images/videos) -->
    {
      post.data.media && post.data.media.length > 0 && (
        <div class={`tweet-media media-count-${Math.min(post.data.media.length, 4)}`}>
          {post.data.media.slice(0, 4).map((item) => (
            <div class="tweet-media-item">
              {item.type === "image" ? (
                <a href={item.url} class="media-link" target="_blank" rel="noopener">
                  <img
                    src={item.url}
                    alt={item.alt || ""}
                    loading="lazy"
                  />
                  {item.caption && (
                    <div class="media-caption">{item.caption}</div>
                  )}
                </a>
              ) : item.type === "video" && isYoutubeUrl(item.url) ? (
                <div class="youtube-embed">
                  <iframe
                    src={`https://www.youtube.com/embed/${getYoutubeVideoId(item.url)}`}
                    title="YouTube video player"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen
                  />
                  {item.caption && (
                    <div class="media-caption">{item.caption}</div>
                  )}
                </div>
              ) : (
                <div class="video-container">
                  <video
                    controls
                    preload="none"
                    poster={item.alt && `/img/placeholder.png`}
                  >
                    <source src={item.url} type="video/mp4" />
                    Your browser does not support the video tag.
                  </video>
                  {item.caption && (
                    <div class="media-caption">{item.caption}</div>
                  )}
                </div>
              )}
            </div>
          ))}
        </div>
      )
    }

    <!-- Location info if available -->
    {
      post.data.location && (
        <div class="tweet-location">
          <i class="bi bi-geo-alt"></i> {post.data.location.name}
        </div>
      )
    }
    
    <!-- Tags -->
    {
      post.data.tags && post.data.tags.length > 0 && (
        <div class="tweet-tags">
          {post.data.tags.map((tag) => (
            <a href={`/microblog/tags/${tag}`} class="tweet-tag">
              #{tag}
            </a>
          ))}
        </div>
      )
    }

    <!-- Post actions -->
    <div class="tweet-actions">
      <a href={`/microblog/${postId}`} class="tweet-action" title="View replies">
        <i class="bi bi-chat"></i>
        <span class="action-count">0</span>
      </a>
      
      <a href="#" class="tweet-action" title="Repost">
        <i class="bi bi-repeat"></i>
        <span class="action-count">0</span>
      </a>
      
      <a href="#" class="tweet-action" title="Like">
        <i class="bi bi-heart"></i>
        <span class="action-count">0</span>
      </a>
      
      <ShareButton 
        postId={postId} 
        title={post.data.title || `Post from ${new Date(post.data.pubDate).toLocaleDateString()}`} 
      />
    </div>
  </div>
</article>

<style>
  .tweet {
    border: 1px solid #eee;
    border-radius: 1rem;
    padding: 1rem;
    margin-bottom: 1.25rem;
    background-color: white;
    transition: background-color 0.2s;
  }

  .tweet:hover {
    background-color: #f8f9fa;
  }

  .tweet-container {
    display: flex;
    flex-direction: column;
  }

  .tweet-header {
    display: flex;
    margin-bottom: 0.5rem;
  }

  .tweet-avatar {
    margin-right: 0.75rem;
    font-size: 2.5rem;
    color: #1DA1F2;
    line-height: 1;
  }

  .tweet-header-content {
    flex: 1;
  }

  .tweet-name-container {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.25rem;
  }

  .tweet-name {
    font-weight: bold;
    font-size: 1rem;
  }

  .tweet-handle, .tweet-time {
    color: #536471;
    font-size: 0.9rem;
  }

  .tweet-dot {
    color: #536471;
  }

  .tweet-title {
    font-weight: bold;
    margin-top: 0.25rem;
  }

  .tweet-content {
    margin-bottom: 0.75rem;
    font-size: 1.1rem;
    line-height: 1.4;
    overflow-wrap: break-word;
    word-break: break-word;
  }

  .tweet-media {
    margin-bottom: 0.75rem;
    border-radius: 1rem;
    overflow: hidden;
    display: grid;
    gap: 2px;
  }

  .media-count-1 {
    grid-template-columns: 1fr;
  }

  .media-count-2 {
    grid-template-columns: 1fr 1fr;
  }

  .media-count-3 {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
  }

  .media-count-3 .tweet-media-item:first-child {
    grid-row: span 2;
  }

  .media-count-4 {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
  }

  .tweet-media-item {
    position: relative;
    overflow: hidden;
    max-height: 400px;
  }

  .tweet-media-item img,
  .tweet-media-item video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .media-caption {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(0,0,0,0.7);
    color: white;
    padding: 5px 10px;
    font-size: 0.85rem;
  }

  .youtube-embed {
    aspect-ratio: 16/9;
    width: 100%;
    position: relative;
  }

  .youtube-embed iframe {
    width: 100%;
    height: 100%;
    border-radius: 0;
    border: none;
  }

  .video-container {
    width: 100%;
  }

  .video-container video {
    width: 100%;
    border-radius: 1rem;
  }

  .tweet-location {
    color: #1DA1F2;
    font-size: 0.9rem;
    margin-bottom: 0.5rem;
  }

  .tweet-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
  }

  .tweet-tag {
    color: #1DA1F2;
    text-decoration: none;
    font-size: 0.95rem;
  }

  .tweet-tag:hover {
    text-decoration: underline;
  }

  .tweet-actions {
    display: flex;
    justify-content: space-between;
    max-width: 425px;
    margin-top: 0.75rem;
    border-top: 1px solid #eee;
    padding-top: 0.75rem;
  }

  .tweet-action {
    display: flex;
    align-items: center;
    color: #536471;
    text-decoration: none;
    font-size: 1.1rem;
    padding: 0.35rem 0.5rem;
    border-radius: 2rem;
    transition: background-color 0.2s, color 0.2s;
  }

  .tweet-action:hover {
    background-color: rgba(29, 161, 242, 0.1);
    color: #1DA1F2;
  }

  .action-count {
    font-size: 0.9rem;
    margin-left: 0.25rem;
  }

  /* Styles for code blocks */
  :global(.tweet-content pre) {
    background-color: #f7f9fa;
    border-radius: 0.5rem;
    padding: 1rem;
    overflow-x: auto;
    margin: 1rem 0;
  }

  :global(.tweet-content code) {
    font-family: monospace;
    font-size: 0.9em;
  }
  
  :global(.tweet-content p) {
    margin-bottom: 0.75rem;
  }
  
  :global(.tweet-content a) {
    color: #1DA1F2;
    text-decoration: none;
  }
  
  :global(.tweet-content a:hover) {
    text-decoration: underline;
  }
  
  /* Make sure PrismJS code blocks are properly styled */
  :global(.tweet-content pre.language-md), 
  :global(.tweet-content pre.language-js),
  :global(.tweet-content pre.language-ts),
  :global(.tweet-content pre.language-html),
  :global(.tweet-content pre.language-css),
  :global(.tweet-content pre[class*="language-"]) {
    background-color: #282c34;
    color: #abb2bf;
    border-radius: 0.5rem;
    padding: 1rem;
    margin: 1rem 0;
    overflow-x: auto;
  }

  @media (max-width: 768px) {
    .microblog-media-item img {
      max-height: 300px;
    }
  }
</style>
