---
/**
 * Blog Post Card Component
 * 
 * A specialized card component designed specifically for blog posts
 * with improved visual design and layout.
 * 
 * Extends CardComponent with blog-specific features like thumbnails
 * and optimized layout for blog post listings.
 * 
 * @component
 * @example
 * ```astro
 * <BlogPostCard
 *   title="My Blog Post"
 *   description="This is a sample blog post description"
 *   date={new Date('2024-04-01')}
 *   tags={["astro", "web"]}
 *   category="Development"
 *   url="/blog/my-post"
 *   thumbnail="/images/post-thumbnail.jpg"
 * />
 * ```
 */

import CardComponent from "./CardComponent.astro";
import { Badge } from "@/components/starwind/badge";
import type { HTMLAttributes } from 'astro/types';

export interface BlogPostCardProps extends HTMLAttributes<'div'> {
  /** Post title */
  title: string;
  /** Post description */
  description: string;
  /** Publication date */
  date: Date;
  /** Array of tags */
  tags: string[];
  /** Category */
  category: string;
  /** URL to the full blog post */
  url: string;
  /** Thumbnail image URL */
  thumbnail?: string;
  /** Thumbnail alt text */
  thumbnailAlt?: string;
  /** Maximum number of tags to display before showing +n */
  maxVisibleTags?: number;
  /** Width of the card */
  width?: string;
}

const {
  title,
  description,
  date,
  tags = [],
  category,
  url,
  thumbnail = "/img/placeholder.png",
  thumbnailAlt,
  maxVisibleTags = 3,
  width = "w-full",
  ...restProps
} = Astro.props;

// Format date for accessibility
const isoDate = date.toISOString();
const formattedDate = date.toLocaleString("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});

// Generate thumbnail alt text if not provided
const imgAlt = thumbnailAlt || `Thumbnail for ${title}`;

// Limit tags for display
const visibleTags = tags.slice(0, maxVisibleTags);
const extraTagsCount = tags.length - maxVisibleTags;
---

<CardComponent 
  title={title}
  date={date}
  actionLink={url}
  actionText="Read Article"
  buttonVariant="ghost"
  width={width}
  hasCustomContent={true}
  class="group h-full hover:border-primary/20 transition-all duration-200"
  {...restProps}
>
  <div class="relative">
    <!-- Thumbnail with optimized image loading -->
    <div class="aspect-video overflow-hidden bg-gradient-to-b from-slate-100 to-slate-200 dark:from-slate-800 dark:to-slate-900">
      <img 
        src={thumbnail} 
        alt={imgAlt}
        width="600"
        height="338"
        loading="lazy"
        decoding="async"
        class="w-full h-full object-cover object-center transform transition-transform duration-300 group-hover:scale-105"
      />
    </div>
    
    <!-- Category badge -->
    <div class="absolute top-3 right-3">
      <Badge variant="secondary" class="bg-white/90 dark:bg-slate-900/90 backdrop-blur-sm shadow-sm">
        {category}
      </Badge>
    </div>
  </div>
  
  <div class="p-4">
    <!-- Publication date -->
    <div class="text-sm text-slate-500 dark:text-slate-400 mb-2 flex items-center">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
      </svg>
      <time datetime={isoDate}>{formattedDate}</time>
    </div>
    
    <!-- Post title with proper heading level for accessibility -->
    <h3 class="text-xl font-bold leading-tight mb-2 group-hover:text-primary transition-colors duration-200">
      <a href={url} class="hover:underline decoration-2 underline-offset-2">
        {title}
      </a>
    </h3>
    
    <!-- Description with proper truncation -->
    <p class="text-slate-600 dark:text-slate-300 line-clamp-2 text-sm mb-4">
      {description}
    </p>
    
    <!-- Tags section -->
    <div class="flex flex-wrap gap-1 mb-4">
      {visibleTags.map((tag) => (
        <Badge variant="outline" class="text-xs bg-slate-100 dark:bg-slate-800 hover:bg-slate-200 dark:hover:bg-slate-700 transition-colors">
          <a href={`/blog/tag/${tag}`}>#{tag}</a>
        </Badge>
      ))}
      {extraTagsCount > 0 && (
        <Badge variant="outline" class="text-xs">+{extraTagsCount}</Badge>
      )}
    </div>
  </div>
  
  <div slot="footer" class="w-full pt-2 border-t border-slate-200 dark:border-slate-700">
    <a 
      href={url}
      class="inline-flex items-center justify-center w-full py-2 text-sm text-center font-medium text-slate-600 dark:text-slate-300 hover:text-primary dark:hover:text-primary transition-colors"
    >
      <span>Read Article</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-0.5 transition-transform" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
      <span class="sr-only">Read full article about {title}</span>
    </a>
  </div>
</CardComponent>

<style>
  /* CSS for text truncation */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 