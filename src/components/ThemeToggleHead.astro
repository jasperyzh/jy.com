<script is:inline>
  // This code is inlined in the head to make dark mode instant & blocking.
  // This prevents theme flicker on page load
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    // Always default to light theme instead of checking system preferences
    return "light";
    /**
     * use these for system preferences
     * return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
     */
  };

  // Apply theme immediately before page render
  const theme = getThemePreference();

  // Apply dark class to html element if needed
  if (theme === "dark") {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }

  if (typeof localStorage !== "undefined") {
    // Watch the document element and persist user preference when it changes.
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });

    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
