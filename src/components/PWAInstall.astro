---
// PWA installation button component
---

<div id="pwa-install-container" class="pwa-install-container d-none">
  <button id="pwa-install-button" class="btn btn-primary">
    Install App
  </button>
</div>

<style>
  .pwa-install-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    padding: 10px;
    background-color: var(--bs-body-bg);
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }
  
  .d-none {
    display: none;
  }
</style>

<script>
  // Only run client-side
  if (typeof window !== 'undefined') {
    let deferredPrompt;
    const installContainer = document.getElementById('pwa-install-container');
    const installButton = document.getElementById('pwa-install-button');

    // Listen for beforeinstallprompt event
    window.addEventListener('beforeinstallprompt', (e) => {
      // Prevent the mini-infobar from appearing on mobile
      e.preventDefault();
      // Stash the event so it can be triggered later
      deferredPrompt = e;
      // Show the install button
      installContainer?.classList.remove('d-none');
    });

    // Handle install button click
    installButton?.addEventListener('click', async () => {
      if (!deferredPrompt) {
        return;
      }
      // Show the install prompt
      deferredPrompt.prompt();
      // Wait for the user to respond to the prompt
      const { outcome } = await deferredPrompt.userChoice;
      // We no longer need the prompt regardless of outcome
      deferredPrompt = null;
      // Hide the install button
      installContainer?.classList.add('d-none');
    });

    // Listen for app installed event
    window.addEventListener('appinstalled', () => {
      // Hide the install button
      installContainer?.classList.add('d-none');
      deferredPrompt = null;
      // Optionally log the installation
      console.log('PWA was installed');
    });
  }
</script>